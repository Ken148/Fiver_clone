<h1><%= t('work_info.title') %></h1>

<%= form_for @seller_profile, url: update_occupation_step_seller_path(@seller_profile), method: :patch do |f| %>
  <!-- Occupation Dropdown -->
  <div class="field">
    <%= f.label :occupation, t('work_info.occupation') %><br />
    <%= f.select :occupation, ["Music and Audio", "Software Development", "Marketing", "Design", "Writing", "Healthcare", "Other"], {}, { id: 'occupation-dropdown', required: true } %>
  </div>

  <!-- Start Year Dropdown -->
  <div class="field">
    <%= f.label :start_year, "Start Year" %><br />
    <%= f.select :start_year, (1950..2025).to_a.reverse, {}, { id: 'start-year-dropdown', required: true } %>
  </div>

  <!-- End Year Dropdown -->
  <div class="field" id="end-year-field" style="display: none;">
    <%= f.label :end_year, "End Year" %><br />
    <%= f.select :end_year, [], {}, { id: 'end-year-dropdown', required: true } %>
  </div>

  <!-- Dynamically populated checkboxes will be placed here -->
  <div id="occupation-checkboxes">
    <!-- Checkboxes will be added dynamically based on the selected occupation -->
  </div>

  <!-- Custom Occupation Field -->
  <div id="custom-occupation-container" style="display: none;">
    <%= f.label :custom_occupation, "Custom Occupation" %><br />
    <%= f.text_field :custom_occupation, placeholder: "Enter your occupation" %>
  </div>

  <!-- Occupation Selection Warning -->
  <div id="occupation-warning" style="color: red; display: none;">
    <p>You can only select up to 3 occupations. Please deselect some if you want to select a different one.</p>
  </div>

  <!-- Skill Dropdown with Level -->
  <div class="field">
    <%= f.label :skills, t('work_info.skills') %><br />
    <%= f.select :skills, options_for_select(["Audio Editing", "Web Development", "SEO Optimization", "Graphic Design", "Content Writing", "Copywriting", "Front-end Development", "Back-end Development", "Social Media Marketing", "Data Science", "Mobile App Development"]), {}, { id: 'skill-dropdown' } %>
    <%= f.select :skill_level, options_for_select(["Beginner", "Intermediate", "Expert"]), {}, { id: 'skill-level' } %>
    <button type="button" id="add-skill-button">Add Skill</button>
  </div>

  <!-- Added Skills List -->
  <div id="skills-list">
    <!-- Dynamically added skills will appear here -->
  </div>

  <!-- Education Section -->
  <div id="education-section">
    <div class="education-entry">
      <div class="field">
        <label for="country-dropdown">Country:</label><br>
        <select id="country-dropdown" class="country-dropdown">
          <option value="USA">USA</option>
          <option value="Canada">Canada</option>
          <option value="UK">United Kingdom</option>
          <option value="Germany">Germany</option>
          <option value="Australia">Australia</option>
          <option value="India">India</option>
        </select>
      </div>

      <div class="field">
        <label for="school-dropdown">School/University:</label><br>
        <select id="school-dropdown" class="school-dropdown">
          <option value="Harvard University">Harvard University</option>
          <option value="MIT">MIT</option>
          <option value="Stanford University">Stanford University</option>
          <option value="Oxford University">Oxford University</option>
          <option value="University of Toronto">University of Toronto</option>
          <option value="University of Melbourne">University of Melbourne</option>
        </select>
      </div>
    </div>
  </div>

  <!-- Website Section (Normal Text Box) -->
  <div class="field">
    <%= f.label :website, "Your Website Link:" %><br />
    <%= f.text_field :website, placeholder: "Put your website link here", id: 'website-textbox' %>
  </div>


  <!-- Submit Button -->
  <%= f.submit t('work_info.continue'), class: 'btn-seller' %>
<% end %>

<!-- JavaScript -->
<script>
document.addEventListener("DOMContentLoaded", function() {
    // Start and End Year Code (Updated Code)
    const startYearDropdown = document.getElementById("start-year-dropdown");
    const endYearDropdown = document.getElementById("end-year-dropdown");
    const endYearField = document.getElementById("end-year-field");

    function updateEndYearOptions(selectedStartYear) {
        endYearDropdown.innerHTML = "";
        for (let year = parseInt(selectedStartYear); year <= 2025; year++) {
            const option = document.createElement("option");
            option.value = year;
            option.textContent = year;
            endYearDropdown.appendChild(option);
        }
    }

    function toggleEndYearVisibility() {
        if (startYearDropdown.value) {
            endYearField.style.display = "block"; // Show the End Year field
            updateEndYearOptions(startYearDropdown.value);
        } else {
            endYearField.style.display = "none"; // Hide the End Year field
        }
    }

    startYearDropdown.addEventListener("change", toggleEndYearVisibility);

    // Initial visibility check
    toggleEndYearVisibility();

    // Occupation Code (Existing Code)
    const occupationDropdown = document.getElementById("occupation-dropdown");
    const occupationCheckboxes = document.getElementById("occupation-checkboxes");
    const customOccupationContainer = document.getElementById("custom-occupation-container");
    const occupationWarning = document.getElementById("occupation-warning");
    const occupationCheckboxMapping = {
      "Music and Audio": ["Audio Ads Production", "Audio Editing", "Audio Logo & Sonic Branding", "Audiobook Production", "Beat Making", "DJ Drops & Tags", "DJ Mixing", "Meditation Music", "Mixing & Mastering", "Music & Audio Advice", "Music Transcription", "Online Music Lessons", "Podcast Production", "Producers & Composers", "Remixing & Mashups", "Session Musicians", "Singers & Vocalists", "Songwriters", "Sound Design", "Synth Presets", "Vocal Tuning"],
      "Software Development": ["Front-end Development", "Back-end Development", "Full-stack Development", "Web Development", "Mobile App Development", "Game Development", "Software Testing", "Database Administration"],
      "Marketing": ["SEO Optimization", "Content Marketing", "Social Media Marketing", "Email Marketing", "Influencer Marketing", "Digital Advertising", "Affiliate Marketing", "Brand Strategy"],
      "Design": ["Graphic Design", "UI/UX Design", "Logo Design", "Web Design", "Illustration", "3D Modeling", "Motion Graphics"],
      "Writing": ["Content Writing", "Copywriting", "Technical Writing", "Creative Writing", "Blog Writing", "Proofreading & Editing", "Scriptwriting"],
      "Healthcare": ["Medical Transcription", "Health Coaching", "Telemedicine", "Fitness Coaching", "Nutrition Counseling", "Mental Health Counseling"]
    };

    function generateCheckboxes(occupation) {
      occupationCheckboxes.innerHTML = '';
      if (occupation === "Other") {
        customOccupationContainer.style.display = "block";
      } else {
        customOccupationContainer.style.display = "none";
      }
      if (occupationCheckboxMapping[occupation]) {
        occupationCheckboxMapping[occupation].forEach(function(option) {
          const checkboxContainer = document.createElement("div");
          checkboxContainer.classList.add("checkbox-container");
          const checkbox = document.createElement("input");
          checkbox.type = "checkbox";
          checkbox.name = "occupation_options[]";
          checkbox.value = option;
          checkbox.id = `occupation-${option}`;
          const label = document.createElement("label");
          label.setAttribute("for", `occupation-${option}`);
          label.textContent = option;
          checkboxContainer.appendChild(checkbox);
          checkboxContainer.appendChild(label);
          occupationCheckboxes.appendChild(checkboxContainer);
          checkbox.addEventListener("change", limitSelections);
        });
      }
    }

    function limitSelections() {
      const selectedCheckboxes = document.querySelectorAll("#occupation-checkboxes input:checked");
      if (selectedCheckboxes.length > 3) {
        occupationWarning.style.display = "block";
        this.checked = false;
      } else {
        occupationWarning.style.display = "none";
      }
    }

    occupationDropdown.addEventListener("change", function() {
      const selectedOccupation = occupationDropdown.value;
      generateCheckboxes(selectedOccupation);
    });
    generateCheckboxes(occupationDropdown.value);

    // Skill Code (Updated - Prevent Duplicate Skills and No Edit Button)
    const addSkillButton = document.getElementById("add-skill-button");
    const skillsListContainer = document.getElementById("skills-list");
    const skillDropdown = document.getElementById("skill-dropdown");
    const skillLevelDropdown = document.getElementById("skill-level");

    function createSkillRow(skill, level) {
        // Prevent duplicate skills
        const existingSkills = Array.from(skillsListContainer.children).map(row => row.querySelector('span').textContent);
        if (existingSkills.includes(skill)) {
            alert("This skill has already been added!");
            return;
        }

        const skillRow = document.createElement("div");
        skillRow.classList.add("skill-row");
        skillRow.innerHTML =
            `<span>${skill}</span> - <span>${level}</span>
            <button type="button" class="remove-skill-button">Remove</button>`;
        skillsListContainer.appendChild(skillRow);

        const removeButton = skillRow.querySelector(".remove-skill-button");
        removeButton.addEventListener("click", () => {
            skillRow.remove();
        });
    }

    addSkillButton.addEventListener("click", function() {
        const selectedSkill = skillDropdown.value;
        const selectedLevel = skillLevelDropdown.value;
        createSkillRow(selectedSkill, selectedLevel);
    });

    // Education Section Code (Existing Code)
    const countryDropdown = document.querySelector(".country-dropdown");
    const schoolDropdown = document.querySelector(".school-dropdown");

    // Prepopulate countries
    fetch("https://api.worldpopulationreview.com/v1/countries")
      .then(response => response.json())
      .then(data => {
          const countries = data.data;
          countries.forEach(country => {
              const option = document.createElement("option");
              option.value = country.name;
              option.textContent = country.name;
              countryDropdown.appendChild(option);
          });
      });
});
</script>
