<%= stylesheet_link_tag "application", media: "all", "data-turbo-track" => "reload" %>
<h1><%= t('posts.index.title') %></h1> <!-- Translated title for "All gigs" -->

<!-- Search Bar -->
<div class="search-container">
  <!-- Add your search bar here -->
</div>

<!-- Display Posts -->
<div class="post-container">
  <% if @posts.any? %>
    <% @posts.each_with_index do |post, post_index| %> <!-- Added post_index to differentiate each post -->
      <div class="post">
        <h2><%= link_to post.title, post_path(post) %></h2>
        <p><%= post.content.truncate(100) %></p>

        <!-- Image Gallery Container for each Post -->
        <div class="container">
          <% plan_images = [
            { image: post.gig.basic_image, name: "Basic Plan", price: post.gig.basic_price, description: post.gig.basic_description },
            { image: post.gig.standard_image, name: "Standard Plan", price: post.gig.standard_price, description: post.gig.standard_description },
            { image: post.gig.premium_image, name: "Premium Plan", price: post.gig.premium_price, description: post.gig.premium_description }
          ] %>

          <% plan_images.each_with_index do |plan, index| %>
            <% if plan[:image].present? %>
              <div class="mySlides" data-post-index="<%= post_index %>" data-index="<%= index %>">
                <div class="numbertext"><%= index + 1 %> / 3</div>
                <%= image_tag(plan[:image], alt: "#{plan[:name]} Image", class: "slide-image") %>
                <div class="caption-container">
                  <h3><%= plan[:name] %></h3>
                  <p><%= plan[:description] %></p>
                  <p><strong>Price:</strong> $<%= plan[:price] %></p>
                </div>
              </div>
            <% end %>
          <% end %>

          <!-- Navigation arrows -->
          <a class="prev" onclick="plusSlides(<%= post_index %>, -1)">&#10094;</a>
          <a class="next" onclick="plusSlides(<%= post_index %>, 1)">&#10095;</a>
        </div>

        <!-- Order Now Button (under description) -->
        <div class="order-now-container" style="text-align: center; margin-top: 10px;">
          <%= link_to "Order Now", post_path(post), class: "btn btn-primary", id: "order-now-#{post.id}", data: { post_id: post.id } %>
        </div>
      </div>
    <% end %>
  <% else %>
    <p><%= t('posts.index.no_posts') %></p> <!-- Translated "No gigs available." -->
  <% end %>
</div>

<!-- Add the necessary JavaScript to handle the slideshow and dynamic content update -->
<script>
  // Initialize slideIndex for each post
  let slideIndices = [];

  // Function to handle showing slides for each post independently
  function showSlides(postIndex) {
    let slides = document.querySelectorAll(`[data-post-index="${postIndex}"]`);
    let totalSlides = slides.length;

    // Hide all slides for the current post
    slides.forEach(slide => slide.style.display = "none");

    // Wrap around the index to keep it within bounds
    if (slideIndices[postIndex] > totalSlides) slideIndices[postIndex] = 1;
    if (slideIndices[postIndex] < 1) slideIndices[postIndex] = totalSlides;

    // Show the current slide
    slides[slideIndices[postIndex] - 1].style.display = "block";
  }

  // Function to handle next/previous for each post's slideshow
  function plusSlides(postIndex, n) {
    // Initialize if undefined
    if (typeof slideIndices[postIndex] === 'undefined') {
      slideIndices[postIndex] = 1; // Initialize the slide for this post
    }

    slideIndices[postIndex] += n;
    showSlides(postIndex);
  }

  // Initialize slideshows after the page loads
  window.onload = function() {
    // Initialize all slideshows
    let posts = document.querySelectorAll('.container');
    posts.forEach((post, index) => {
      slideIndices[index] = 1; // Set initial slide for each post's slideshow
      showSlides(index); // Show the first slide for each post
    });

    // Order Now Button Click Event
    const orderButtons = document.querySelectorAll('.btn-primary');
    orderButtons.forEach((button) => {
      button.addEventListener('click', function(event) {
        event.preventDefault();  // Prevent default link behavior

        if (!document.body.classList.contains('signed-in')) {  // If not logged in
          // Store the current post's URL in session storage before redirecting to login
          sessionStorage.setItem('redirect_to', this.href);

          // Redirect to login page
          window.location.href = '<%= new_user_session_path %>';
        } else {
          // If logged in, allow the normal link behavior
          window.location.href = this.href;
        }
      });
    });

    // After login, redirect user to the saved URL (if they were redirected)
    if (sessionStorage.getItem('redirect_to')) {
      const redirectUrl = sessionStorage.getItem('redirect_to');
      sessionStorage.removeItem('redirect_to'); // Clear the saved URL
      window.location.href = redirectUrl; // Redirect to the post page
    }
  };
</script>
